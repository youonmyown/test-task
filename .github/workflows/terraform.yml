name: Terraform Apply and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:
  
jobs:
  terraform_apply:
    name: Terraform
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.7.5
      
    - name: Terraform Init
      run: terraform init
      
    - name: Terraform Plan
      run: terraform plan -out=tfplan
      env:
        TF_VAR_access_key: ${{ secrets.ACCESS_KEY }}
        TF_VAR_secret_key: ${{ secrets.SECRET_KEY }}
        TF_VAR_region: ${{ secrets.REGION }}

    - name: Save tfplan artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: tfplan
        path: tfplan

    - name: Terraform Apply
      if: success()
      id: terraform_apply
      run: terraform apply tfplan

    - name: Extract public IP from Terraform output
      id: extract_ip
      run: |
        WEB_SERVER_IP=$(terraform output -raw instance_public_ip)
        
        if [ -z "$WEB_SERVER_IP" ]; then
          echo "Error: No IP address found in Terraform output."
          exit 1
        fi
        echo "WEB_SERVER_IP=${WEB_SERVER_IP}" >> $GITHUB_ENV
        echo "Extracted IP address: ${WEB_SERVER_IP}"
      env:
        TF_VAR_access_key: ${{ secrets.ACCESS_KEY }}
        TF_VAR_secret_key: ${{ secrets.SECRET_KEY }}
        TF_VAR_region: ${{ secrets.REGION }}

    - name: Install Ansible
      if: success()
      run: |
        sudo apt-get update
        sudo apt-get install -y ansible

    - name: Write Ansible inventory
      if: success()
      run: |
        echo "[webserver]" > inventory.ini
        echo "${{ env.WEB_SERVER_IP }} ansible_python_interpreter=/usr/bin/python3" >> inventory.ini

    - name: Run Ansible playbook
      if: success()  
      run: ansible-playbook -i inventory.ini site.yml

    - name: Clone s3-website repository
      if: success()
      run: |
        git clone https://github.com/youonmyown/s3-website.git
        ls s3-website/website

    - name: Copy website folder to instance
      if: success()
      run: |
        ansible all -m copy -a "src=./s3-website/website dest=/var/www/html/wordpress owner=www-data group=www-data mode=0755" -i inventory.ini

    - name: Terraform Destroy
      if: always()
      run: terraform destroy -auto-approve
      env:
        TF_VAR_access_key: ${{ secrets.ACCESS_KEY }}
        TF_VAR_secret_key: ${{ secrets.SECRET_KEY }}
        TF_VAR_region: ${{ secrets.REGION }}
