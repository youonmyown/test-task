name: Terraform Apply and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:
  
jobs:
  terraform_apply:
    name: Terraform
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.7.5
      
    - name: Terraform Init
      run: terraform init
      
    - name: Terraform Plan
      run: terraform plan -out=tfplan
      env:
        TF_VAR_access_key: ${{ secrets.ACCESS_KEY }}
        TF_VAR_secret_key: ${{ secrets.SECRET_KEY }}
        TF_VAR_region: ${{ secrets.REGION }}

    - name: Save tfplan artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: tfplan
        path: tfplan

    - name: Terraform Apply
      if: success()
      id: terraform_apply
      run: terraform apply tfplan

    # - name: Set execute permissions for ip_to_inventory.sh
    #   if: success()
    #   run: chmod +x ./ip_to_inventory.sh

    # - name: Run ip_to_inventory script
    #   if: success()
    #   run: ./ip_to_inventory.sh

    - name: Install Ansible
      if: success()
      run: |
        sudo apt-get update
        sudo apt-get install -y ansible

    # - name: Run Ansible playbook
    #   if: success()  
    #   run: ansible-playbook site.yml

    - name: Run Ansible Playbook
      run: |
        elastic_ip=$(terraform output -raw elastic_ip)
        if [[ "$elastic_ip" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          ansible-playbook -i "$elastic_ip," -e "ansible_python_interpreter=/usr/bin/python3" site.yml
        else
          echo "Invalid IP: $elastic_ip"
          exit 1
        fi

    - name: Clone s3-website repository
      if: success()
      run: |
        git clone https://github.com/youonmyown/s3-website.git
        ls s3-website/website

    - name: Copy website folder to instance
      if: success()
      run: |
        ansible all -m copy -a "src=./s3-website/website dest=/var/www/html/wordpress owner=www-data group=www-data mode=0755"

        
    - name: Terraform Destroy
      # if: ${{ github.event_name == 'workflow_dispatch' }}
      if: always()
      run: terraform destroy -auto-approve
      env:
        TF_VAR_access_key: ${{ secrets.ACCESS_KEY }}
        TF_VAR_secret_key: ${{ secrets.SECRET_KEY }}
        TF_VAR_region: ${{ secrets.REGION }}

