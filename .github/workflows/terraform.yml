name: Terraform Apply and Deploy

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.7.5
      
    - name: Terraform Init
      run: terraform init
      
    - name: Terraform Plan
      run: terraform plan -out=tfplan
      env:
        TF_VAR_access_key: ${{ secrets.ACCESS_KEY }}
        TF_VAR_secret_key: ${{ secrets.SECRET_KEY }}
        TF_VAR_region: ${{ secrets.REGION }}

    - name: Save tfplan artifact
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: tfplan
        path: tfplan

    - name: Terraform Apply
      if: success()
      id: terraform_apply
      run: terraform apply tfplan

    - name: Terraform Destroy
      if: failure()
      run: terraform destroy -auto-approve
      env:
        TF_VAR_access_key: ${{ secrets.ACCESS_KEY }}
        TF_VAR_secret_key: ${{ secrets.SECRET_KEY }}
        TF_VAR_region: ${{ secrets.REGION }}
        TF_VAR_bucket_name: ${{ secrets.BUCKET_NAME }}

#  deploy:
#    name: Deploy to S3
#    runs-on: ubuntu-latest
#    needs: terraform
    # if: success() && needs.terraform.outputs.terraform_apply == 'success'
#    if: success()
#    steps:
#    - name: Checkout repository
#      uses: actions/checkout@v2
  
#    - name: Setup AWS CLI
#      uses: aws-actions/configure-aws-credentials@v2
#      with:
#        aws-access-key-id: ${{ secrets.ACCESS_KEY }}
#        aws-secret-access-key: ${{ secrets.SECRET_KEY }}
#        aws-region: ${{ secrets.REGION }}
  
#    - name: Copy files to S3
#      run: aws s3 cp --recursive ./website/ s3://${{ secrets.BUCKET_NAME }}
